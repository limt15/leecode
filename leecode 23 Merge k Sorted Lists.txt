/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int n = lists.size();
        if(n ==0) return NULL;
        while (n > 1) {
            int k = (n + 1) / 2;
            for(int i = 0; i < n / 2; i++) {
                lists[i] = mergeTwoLists(lists[i], lists[i + k]);
            }
            n = k;
        }
        return lists[0];
    }
    
     ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode node(0), *res = &node;
        while (l1 && l2) {
            if(l1->val <= l2->val) {
                res->next = l1;
                l1 = l1->next;
            }
            else {
                res->next = l2;
                l2 = l2->next;
            }
            res = res->next;
        }
        if(l1) {
            res->next = l1;
        }
        if(l2) {
            res->next = l2;
        }
        
	    return node.next;
    }
    
};